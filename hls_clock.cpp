//=========================================================================================================
// hls_clock.cpp - Implements a mechanism for communicating with a "hls_clock.v" module
//=========================================================================================================
#include "hls_clock.h"
#include "ap_utils.h"


// These are the two commands that hls_clock.v understands
enum {TIME_RESET = 0, TIME_GET = 1};


//=========================================================================================================
// time() - Fetch the current time in microseconds
//=========================================================================================================
uint64_t CHLSClock::time()
{
    _cmd_fifo.write(TIME_GET);
    ap_wait();
    return _rsp_fifo.read();
}
//=========================================================================================================

//=========================================================================================================
// reset() - Resets the microsecond counter back to zero
//=========================================================================================================
void CHLSClock::reset()
{
    _cmd_fifo.write(TIME_RESET);
    ap_wait();
    _rsp_fifo.read();
}
//=========================================================================================================
